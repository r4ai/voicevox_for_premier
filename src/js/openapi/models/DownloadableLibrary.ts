/* tslint:disable */
/* eslint-disable */
/**
 * VOICEVOX Engine
 * VOICEVOXの音声合成エンジンです。
 *
 * The version of the OpenAPI document: 0.14.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * ダウンロード可能な音声ライブラリの情報（最新情報をwebで取得することを考慮して、ローカルの情報はない）
 * @export
 * @interface DownloadableLibrary
 */
export interface DownloadableLibrary {
    /**
     * 
     * @type {string}
     * @memberof DownloadableLibrary
     */
    downloadUrl: string;
    /**
     * 
     * @type {number}
     * @memberof DownloadableLibrary
     */
    bytes: number;
    /**
     * 
     * @type {}
     * @memberof DownloadableLibrary
     */
    speaker: ;
    /**
     * 
     * @type {}
     * @memberof DownloadableLibrary
     */
    speakerInfo: ;
}

/**
 * Check if a given object implements the DownloadableLibrary interface.
 */
export function instanceOfDownloadableLibrary(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "downloadUrl" in value;
    isInstance = isInstance && "bytes" in value;
    isInstance = isInstance && "speaker" in value;
    isInstance = isInstance && "speakerInfo" in value;

    return isInstance;
}

export function DownloadableLibraryFromJSON(json: any): DownloadableLibrary {
    return DownloadableLibraryFromJSONTyped(json, false);
}

export function DownloadableLibraryFromJSONTyped(json: any, ignoreDiscriminator: boolean): DownloadableLibrary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'downloadUrl': json['download_url'],
        'bytes': json['bytes'],
        'speaker': FromJSON(json['speaker']),
        'speakerInfo': FromJSON(json['speaker_info']),
    };
}

export function DownloadableLibraryToJSON(value?: DownloadableLibrary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'download_url': value.downloadUrl,
        'bytes': value.bytes,
        'speaker': ToJSON(value.speaker),
        'speaker_info': ToJSON(value.speakerInfo),
    };
}

